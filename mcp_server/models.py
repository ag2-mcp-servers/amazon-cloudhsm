# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T10:03:54+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, constr


class AZ(RootModel[constr(pattern=r'[a-zA-Z0-9\-]*')]):
    root: constr(pattern=r'[a-zA-Z0-9\-]*')


class AZList(RootModel[List[AZ]]):
    root: List[AZ]


class Certificate(
    RootModel[constr(pattern=r'[\w :+=./\n-]*', min_length=600, max_length=2400)]
):
    root: constr(pattern=r'[\w :+=./\n-]*', min_length=600, max_length=2400)


class CertificateFingerprint(
    RootModel[constr(pattern=r'([0-9a-fA-F][0-9a-fA-F]:){15}[0-9a-fA-F][0-9a-fA-F]')]
):
    root: constr(pattern=r'([0-9a-fA-F][0-9a-fA-F]:){15}[0-9a-fA-F][0-9a-fA-F]')


class ClientArn(
    RootModel[
        constr(
            pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:client-[0-9a-f]{8}'
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:client-[0-9a-f]{8}'
    )


class ClientLabel(RootModel[constr(pattern=r'[a-zA-Z0-9_.-]{2,64}')]):
    root: constr(pattern=r'[a-zA-Z0-9_.-]{2,64}')


class ClientList(RootModel[List[ClientArn]]):
    root: List[ClientArn]


class ClientToken(RootModel[constr(pattern=r'[a-zA-Z0-9]{1,64}')]):
    root: constr(pattern=r'[a-zA-Z0-9]{1,64}')


class ClientVersion(Enum):
    field_5_1 = '5.1'
    field_5_3 = '5.3'


class CloudHsmInternalException(RootModel[Any]):
    root: Any


class CloudHsmObjectState(Enum):
    READY = 'READY'
    UPDATING = 'UPDATING'
    DEGRADED = 'DEGRADED'


class CloudHsmServiceException(RootModel[Any]):
    root: Any


class CreateLunaClientRequest(BaseModel):
    Certificate_1: Certificate = Field(..., alias='Certificate')
    Label: Optional[ClientLabel] = None


class CreateLunaClientResponse(BaseModel):
    ClientArn_1: Optional[ClientArn] = Field(None, alias='ClientArn')


class DeleteLunaClientRequest(BaseModel):
    ClientArn_1: ClientArn = Field(..., alias='ClientArn')


class DescribeLunaClientRequest(BaseModel):
    CertificateFingerprint_1: Optional[CertificateFingerprint] = Field(
        None, alias='CertificateFingerprint'
    )
    ClientArn_1: Optional[ClientArn] = Field(None, alias='ClientArn')


class EniId(RootModel[constr(pattern=r'eni-[0-9a-f]{8}')]):
    root: constr(pattern=r'eni-[0-9a-f]{8}')


class ExternalId(RootModel[constr(pattern=r'[\w :+=./-]*')]):
    root: constr(pattern=r'[\w :+=./-]*')


class HapgArn(
    RootModel[
        constr(
            pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hapg-[0-9a-f]{8}'
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hapg-[0-9a-f]{8}'
    )


class HapgList(RootModel[List[HapgArn]]):
    root: List[HapgArn]


class HsmArn(
    RootModel[
        constr(
            pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hsm-[0-9a-f]{8}'
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hsm-[0-9a-f]{8}'
    ) = Field(..., description='An ARN that identifies an HSM.')


class HsmList(RootModel[List[HsmArn]]):
    root: List[HsmArn] = Field(
        ..., description='Contains a list of ARNs that identify the HSMs.'
    )


class HsmSerialNumber(RootModel[constr(pattern=r'\d{1,16}')]):
    root: constr(pattern=r'\d{1,16}')


class HsmStatus(Enum):
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    UPDATING = 'UPDATING'
    SUSPENDED = 'SUSPENDED'
    TERMINATING = 'TERMINATING'
    TERMINATED = 'TERMINATED'
    DEGRADED = 'DEGRADED'


class IamRoleArn(
    RootModel[
        constr(
            pattern=r'arn:aws(-iso)?:iam::[0-9]{12}:role/[a-zA-Z0-9_\+=,\.\-@]{1,64}'
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-iso)?:iam::[0-9]{12}:role/[a-zA-Z0-9_\+=,\.\-@]{1,64}'
    )


class InvalidRequestException(RootModel[Any]):
    root: Any


class IpAddress(RootModel[constr(pattern=r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')]):
    root: constr(pattern=r'\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}')


class Label(RootModel[constr(pattern=r'[a-zA-Z0-9_.-]{1,64}')]):
    root: constr(pattern=r'[a-zA-Z0-9_.-]{1,64}')


class ListAvailableZonesRequest(BaseModel):
    pass


class ListAvailableZonesResponse(BaseModel):
    AZList_1: Optional[AZList] = Field(None, alias='AZList')


class ModifyHapgResponse(BaseModel):
    HapgArn_1: Optional[HapgArn] = Field(None, alias='HapgArn')


class ModifyHsmResponse(BaseModel):
    HsmArn_1: Optional[HsmArn] = Field(None, alias='HsmArn')


class ModifyLunaClientRequest(BaseModel):
    Certificate_1: Certificate = Field(..., alias='Certificate')
    ClientArn_1: ClientArn = Field(..., alias='ClientArn')


class ModifyLunaClientResponse(BaseModel):
    ClientArn_1: Optional[ClientArn] = Field(None, alias='ClientArn')


class PaginationToken(RootModel[constr(pattern=r'[a-zA-Z0-9+/]*')]):
    root: constr(pattern=r'[a-zA-Z0-9+/]*')


class PartitionArn(
    RootModel[
        constr(
            pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hsm-[0-9a-f]{8}/partition-[0-9]{6,12}'
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-iso)?:cloudhsm:[a-zA-Z0-9\-]*:[0-9]{12}:hsm-[0-9a-f]{8}/partition-[0-9]{6,12}'
    )


class PartitionList(RootModel[List[PartitionArn]]):
    root: List[PartitionArn]


class PartitionSerial(RootModel[constr(pattern=r'\d{6,12}')]):
    root: constr(pattern=r'\d{6,12}')


class PartitionSerialList(RootModel[List[PartitionSerial]]):
    root: List[PartitionSerial]


class SshKey(RootModel[constr(pattern=r'[a-zA-Z0-9+/= ._:\\@-]*')]):
    root: constr(pattern=r'[a-zA-Z0-9+/= ._:\\@-]*')


class String(RootModel[constr(pattern=r'[\w :+=./\\-]*')]):
    root: constr(pattern=r'[\w :+=./\\-]*')


class SubnetId(RootModel[constr(pattern=r'subnet-[0-9a-f]{8}')]):
    root: constr(pattern=r'subnet-[0-9a-f]{8}')


class SubscriptionType(Enum):
    PRODUCTION = 'PRODUCTION'


class TagKey(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey]


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class Timestamp(RootModel[constr(pattern=r'\d*')]):
    root: constr(pattern=r'\d*')


class VpcId(RootModel[constr(pattern=r'vpc-[0-9a-f]{8}')]):
    root: constr(pattern=r'vpc-[0-9a-f]{8}')


class XAmzTarget(Enum):
    CloudHsmFrontendService_AddTagsToResource = (
        'CloudHsmFrontendService.AddTagsToResource'
    )


class XAmzTarget1(Enum):
    CloudHsmFrontendService_CreateHapg = 'CloudHsmFrontendService.CreateHapg'


class XAmzTarget2(Enum):
    CloudHsmFrontendService_CreateHsm = 'CloudHsmFrontendService.CreateHsm'


class XAmzTarget3(Enum):
    CloudHsmFrontendService_CreateLunaClient = (
        'CloudHsmFrontendService.CreateLunaClient'
    )


class XAmzTarget4(Enum):
    CloudHsmFrontendService_DeleteHapg = 'CloudHsmFrontendService.DeleteHapg'


class XAmzTarget5(Enum):
    CloudHsmFrontendService_DeleteHsm = 'CloudHsmFrontendService.DeleteHsm'


class XAmzTarget6(Enum):
    CloudHsmFrontendService_DeleteLunaClient = (
        'CloudHsmFrontendService.DeleteLunaClient'
    )


class XAmzTarget7(Enum):
    CloudHsmFrontendService_DescribeHapg = 'CloudHsmFrontendService.DescribeHapg'


class XAmzTarget8(Enum):
    CloudHsmFrontendService_DescribeHsm = 'CloudHsmFrontendService.DescribeHsm'


class XAmzTarget9(Enum):
    CloudHsmFrontendService_DescribeLunaClient = (
        'CloudHsmFrontendService.DescribeLunaClient'
    )


class XAmzTarget10(Enum):
    CloudHsmFrontendService_GetConfig = 'CloudHsmFrontendService.GetConfig'


class XAmzTarget11(Enum):
    CloudHsmFrontendService_ListAvailableZones = (
        'CloudHsmFrontendService.ListAvailableZones'
    )


class XAmzTarget12(Enum):
    CloudHsmFrontendService_ListHapgs = 'CloudHsmFrontendService.ListHapgs'


class XAmzTarget13(Enum):
    CloudHsmFrontendService_ListHsms = 'CloudHsmFrontendService.ListHsms'


class XAmzTarget14(Enum):
    CloudHsmFrontendService_ListLunaClients = 'CloudHsmFrontendService.ListLunaClients'


class XAmzTarget15(Enum):
    CloudHsmFrontendService_ListTagsForResource = (
        'CloudHsmFrontendService.ListTagsForResource'
    )


class XAmzTarget16(Enum):
    CloudHsmFrontendService_ModifyHapg = 'CloudHsmFrontendService.ModifyHapg'


class XAmzTarget17(Enum):
    CloudHsmFrontendService_ModifyHsm = 'CloudHsmFrontendService.ModifyHsm'


class XAmzTarget18(Enum):
    CloudHsmFrontendService_ModifyLunaClient = (
        'CloudHsmFrontendService.ModifyLunaClient'
    )


class XAmzTarget19(Enum):
    CloudHsmFrontendService_RemoveTagsFromResource = (
        'CloudHsmFrontendService.RemoveTagsFromResource'
    )


class AddTagsToResourceResponse(BaseModel):
    Status: String


class CreateHapgRequest(BaseModel):
    Label_1: Label = Field(..., alias='Label')


class CreateHapgResponse(BaseModel):
    HapgArn_1: Optional[HapgArn] = Field(None, alias='HapgArn')


class CreateHsmRequest(BaseModel):
    ClientToken_1: Optional[ClientToken] = Field(None, alias='ClientToken')
    EniIp: Optional[IpAddress] = None
    ExternalId_1: Optional[ExternalId] = Field(None, alias='ExternalId')
    IamRoleArn_1: IamRoleArn = Field(..., alias='IamRoleArn')
    SshKey_1: SshKey = Field(..., alias='SshKey')
    SubnetId_1: SubnetId = Field(..., alias='SubnetId')
    SubscriptionType_1: SubscriptionType = Field(..., alias='SubscriptionType')
    SyslogIp: Optional[IpAddress] = None


class CreateHsmResponse(BaseModel):
    HsmArn_1: Optional[HsmArn] = Field(None, alias='HsmArn')


class DeleteHapgRequest(BaseModel):
    HapgArn_1: HapgArn = Field(..., alias='HapgArn')


class DeleteHapgResponse(BaseModel):
    Status: String


class DeleteHsmRequest(BaseModel):
    HsmArn_1: HsmArn = Field(..., alias='HsmArn')


class DeleteHsmResponse(BaseModel):
    Status: String


class DeleteLunaClientResponse(BaseModel):
    Status: String


class DescribeHapgRequest(BaseModel):
    HapgArn_1: HapgArn = Field(..., alias='HapgArn')


class DescribeHapgResponse(BaseModel):
    HapgArn_1: Optional[HapgArn] = Field(None, alias='HapgArn')
    HapgSerial: Optional[String] = None
    HsmsLastActionFailed: Optional[HsmList] = None
    HsmsPendingDeletion: Optional[HsmList] = None
    HsmsPendingRegistration: Optional[HsmList] = None
    Label_1: Optional[Label] = Field(None, alias='Label')
    LastModifiedTimestamp: Optional[Timestamp] = None
    PartitionSerialList_1: Optional[PartitionSerialList] = Field(
        None, alias='PartitionSerialList'
    )
    State: Optional[CloudHsmObjectState] = None


class DescribeHsmRequest(BaseModel):
    HsmArn_1: Optional[HsmArn] = Field(None, alias='HsmArn')
    HsmSerialNumber_1: Optional[HsmSerialNumber] = Field(None, alias='HsmSerialNumber')


class DescribeHsmResponse(BaseModel):
    AvailabilityZone: Optional[AZ] = None
    EniId_1: Optional[EniId] = Field(None, alias='EniId')
    EniIp: Optional[IpAddress] = None
    HsmArn_1: Optional[HsmArn] = Field(None, alias='HsmArn')
    HsmType: Optional[String] = None
    IamRoleArn_1: Optional[IamRoleArn] = Field(None, alias='IamRoleArn')
    Partitions: Optional[PartitionList] = None
    SerialNumber: Optional[HsmSerialNumber] = None
    ServerCertLastUpdated: Optional[Timestamp] = None
    ServerCertUri: Optional[String] = None
    SoftwareVersion: Optional[String] = None
    SshKeyLastUpdated: Optional[Timestamp] = None
    SshPublicKey: Optional[SshKey] = None
    Status: Optional[HsmStatus] = None
    StatusDetails: Optional[String] = None
    SubnetId_1: Optional[SubnetId] = Field(None, alias='SubnetId')
    SubscriptionEndDate: Optional[Timestamp] = None
    SubscriptionStartDate: Optional[Timestamp] = None
    SubscriptionType_1: Optional[SubscriptionType] = Field(
        None, alias='SubscriptionType'
    )
    VendorName: Optional[String] = None
    VpcId_1: Optional[VpcId] = Field(None, alias='VpcId')


class DescribeLunaClientResponse(BaseModel):
    Certificate_1: Optional[Certificate] = Field(None, alias='Certificate')
    CertificateFingerprint_1: Optional[CertificateFingerprint] = Field(
        None, alias='CertificateFingerprint'
    )
    ClientArn_1: Optional[ClientArn] = Field(None, alias='ClientArn')
    Label_1: Optional[Label] = Field(None, alias='Label')
    LastModifiedTimestamp: Optional[Timestamp] = None


class GetConfigRequest(BaseModel):
    ClientArn_1: ClientArn = Field(..., alias='ClientArn')
    ClientVersion_1: ClientVersion = Field(..., alias='ClientVersion')
    HapgList_1: HapgList = Field(..., alias='HapgList')


class GetConfigResponse(BaseModel):
    ConfigCred: Optional[String] = None
    ConfigFile: Optional[String] = None
    ConfigType: Optional[String] = None


class ListHapgsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None


class ListHapgsResponse(BaseModel):
    HapgList_1: HapgList = Field(..., alias='HapgList')
    NextToken: Optional[PaginationToken] = None


class ListHsmsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None


class ListHsmsResponse(BaseModel):
    HsmList_1: Optional[HsmList] = Field(None, alias='HsmList')
    NextToken: Optional[PaginationToken] = None


class ListLunaClientsRequest(BaseModel):
    NextToken: Optional[PaginationToken] = None


class ListLunaClientsResponse(BaseModel):
    ClientList_1: ClientList = Field(..., alias='ClientList')
    NextToken: Optional[PaginationToken] = None


class ListTagsForResourceRequest(BaseModel):
    ResourceArn: String


class ModifyHapgRequest(BaseModel):
    HapgArn_1: HapgArn = Field(..., alias='HapgArn')
    Label_1: Optional[Label] = Field(None, alias='Label')
    PartitionSerialList_1: Optional[PartitionSerialList] = Field(
        None, alias='PartitionSerialList'
    )


class ModifyHsmRequest(BaseModel):
    EniIp: Optional[IpAddress] = None
    ExternalId_1: Optional[ExternalId] = Field(None, alias='ExternalId')
    HsmArn_1: HsmArn = Field(..., alias='HsmArn')
    IamRoleArn_1: Optional[IamRoleArn] = Field(None, alias='IamRoleArn')
    SubnetId_1: Optional[SubnetId] = Field(None, alias='SubnetId')
    SyslogIp: Optional[IpAddress] = None


class RemoveTagsFromResourceRequest(BaseModel):
    ResourceArn: String
    TagKeyList_1: TagKeyList = Field(..., alias='TagKeyList')


class RemoveTagsFromResourceResponse(BaseModel):
    Status: String


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class TagList(RootModel[List[Tag]]):
    root: List[Tag]


class AddTagsToResourceRequest(BaseModel):
    ResourceArn: String
    TagList_1: TagList = Field(..., alias='TagList')


class ListTagsForResourceResponse(BaseModel):
    TagList_1: TagList = Field(..., alias='TagList')
